<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zs13のシェルター</title>
  <icon>https://blog.zs13.tech/icon.png</icon>
  <subtitle>僕のblog</subtitle>
  <link href="https://blog.zs13.tech/atom.xml" rel="self"/>
  
  <link href="https://blog.zs13.tech/"/>
  <updated>2024-07-23T05:27:00.000Z</updated>
  <id>https://blog.zs13.tech/</id>
  
  <author>
    <name>zs13</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue入门（回忆.img）-黑马vue+spring项目学习笔记</title>
    <link href="https://blog.zs13.tech/posts/5401/"/>
    <id>https://blog.zs13.tech/posts/5401/</id>
    <published>2024-07-01T00:47:00.000Z</published>
    <updated>2024-07-23T05:27:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vue入门">Vue入门</h2><h3 id="vue安装">Vue安装</h3><h4 id="通过es-模块快速将vue3导入到一个页面中">通过ES模块快速将vue3导入到一个页面中</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; createApp, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;https://unpkg.com/vue@3/dist/vue.esm-browser.js&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">createApp</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> message = <span class="title function_">ref</span>(<span class="string">&#x27;Hello Vue!&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        message</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;).<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v提供的常用指令">V提供的常用指令</h3><table><colgroup><col style="width: 42%" /><col style="width: 57%" /></colgroup><thead><tr><th>指令</th><th>作用</th></tr></thead><tbody><tr><td></td><td>列表渲染，遍历容器的元素或者对象的属性</td></tr><tr><td></td><td>为HTML标签绑定属性，如设置href，css样式</td></tr><tr><td></td><td>条件性的渲染某元素，判定为true时渲染，否则不渲染</td></tr><tr><td></td><td>根据条件展示某元素，区别在于切换的是display属性的值</td></tr><tr><td></td><td>在表单元素上创建双向数据绑定</td></tr><tr><td></td><td>为HTML标签绑定事件</td></tr></tbody></table><h4 id="v-for">v-for</h4><ul><li>作用：列表渲染，遍历容器的元素或者对象的属性</li><li>语法：v-for = “(item,index) in items”<ul><li>参数说明：<ul><li>items 为遍历的数组</li><li>item 为遍历出来的元素</li><li>index为索引/下标，从0开始；可以省略，省略index语法：v-for = “item initems”</li></ul></li></ul></li></ul><blockquote><p>简单案例</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1 solid&quot;</span> <span class="attr">colspa</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>文章标题<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>分类<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>发表时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>状态<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(article,index) in articleList&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;article.title&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;article.category&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;article.time&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;article.state&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//导入vue模块</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">import</span> &#123; createApp&#125; <span class="keyword">from</span></span></span><br><span class="line"><span class="language-javascript">                <span class="string">&#x27;https://unpkg.com/vue@3/dist/vue.esm-browser.js&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//创建应用实例</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">createApp</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">articleList</span>:[</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">title</span>:<span class="string">&quot;医疗反腐绝非砍医护收入&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">category</span>:<span class="string">&quot;时事&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">time</span>:<span class="string">&quot;2023-09-5&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">state</span>:<span class="string">&quot;已发布&quot;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;,</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">title</span>:<span class="string">&quot;中国男篮缘何一败涂地？&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">category</span>:<span class="string">&quot;篮球&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">time</span>:<span class="string">&quot;2023-09-5&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">state</span>:<span class="string">&quot;草稿&quot;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;,</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">title</span>:<span class="string">&quot;华山景区已受大风影响阵风达7-8级，未来24小时将持续&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">category</span>:<span class="string">&quot;旅游&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">time</span>:<span class="string">&quot;2023-09-5&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">state</span>:<span class="string">&quot;已发布&quot;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    ]</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>)<span class="comment">//控制页面元素</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://r2.zs13.eu.org/2024/07/202407010925331.webp" /></p><h4 id="v-bind">v-bind</h4><ul><li>作用：动态为HTML标签绑定属性值，如果设置href，sec，style样式等。</li><li>语法：v-bind:<code>属性名</code>:=“属性值”</li><li>简化：:<code>属性名</code>=“属性值”</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;a v-bind:href=&quot;URL&quot;&gt;黑马官网&lt;/a&gt; --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">&quot;URL&quot;</span>&gt;</span>黑马官网<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//引入vue模块</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">import</span> &#123; createApp&#125; <span class="keyword">from</span></span></span><br><span class="line"><span class="language-javascript">                <span class="string">&#x27;https://unpkg.com/vue@3/dist/vue.esm-browser.js&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//创建vue应用实例</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">createApp</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable constant_">URL</span> : <span class="string">&#x27;https://www.itheima.com&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>)<span class="comment">//控制html元素</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="v-ifv-show">v-if&amp;v-show</h4><ul><li>作用：通过这两类指令，都是用来控制元素的显示与隐藏的</li><li>v-if<ul><li>语法：v-if=“表达式”,表达式值为 true，显示；false， 隐藏</li><li>其他：可以配合 v-else-if/v-else 进行链式调用条件判断</li><li>原理：<mark class="hl-label red">基于条件判断，来控制创建或移除元素节点（条件渲染）</mark> </li><li>场景：要么显示，要么不显示，不频繁切换的场景</li></ul></li><li>v-show<ul><li>语法：v-show=“表达式”,表达式值为 true，显示；false，隐藏</li><li>原理：<mark class="hl-label red">基于CSS样式display来控制显示与隐藏</mark> </li><li>场景：频繁切换显示的场景 <div class="note info flat"><p>v-if简单案例</p></div></li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        手链价格为:</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;customer.level&gt;=0 &amp;&amp; customer.level&lt;=1&quot;</span>&gt;</span>9.9<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else-if</span>=<span class="string">&quot;customer.level&gt;=2 &amp;&amp; customer.level&lt;=4&quot;</span>&gt;</span>19.9<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>=&gt;</span>29.9<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        手链价格为:</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;customer.level&gt;=0 &amp;&amp; customer.level&lt;=1&quot;</span>&gt;</span>9.9<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;customer.level&gt;=2 &amp;&amp; customer.level&lt;=4&quot;</span>&gt;</span>19.9<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;customer.level&gt;=5&quot;</span>&gt;</span>29.9<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//导入vue模块</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;https://unpkg.com/vue@3/dist/vue.esm-browser.js&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//创建vue应用实例</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">createApp</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">customer</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">name</span>: <span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">level</span>: <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>)<span class="comment">//控制html元素</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="v-on">v-on</h4><ul><li>作用：为html绑定事件</li><li>语法：<ul><li>v-on:事件名=“函数名”</li><li>简写为@时间名=“函数名”</li></ul></li><li><mark class="hl-label red">函数需要定义在methods内</mark> </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;money&quot;</span>&gt;</span>点我有惊喜<span class="tag">&lt;/<span class="name">button</span>&gt;</span> <span class="symbol">&amp;nbsp;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;love&quot;</span>&gt;</span>再点更惊喜<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//导入vue模块</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;https://unpkg.com/vue@3/dist/vue.esm-browser.js&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//创建vue应用实例</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">createApp</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//定义数据</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;, <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">money</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="string">&quot;送你钱&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">love</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="string">&quot;爱你一万年&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);<span class="comment">//控制html元素</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="v-model">v-model</h4><ul><li>作用：在表单元素上使用，<mark class="hl-label orange">双向数据绑定</mark> 。可以方便的<mark class="hl-label pink">获取或设置</mark> 表单项数据</li><li>语法：v-model=“变量名” <div class="note warning flat"><p>v-model 中绑定的变量，必须在data中定义。</p></div></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">        文章分类: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;searchConditions.category&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;searchConditions.category&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        发布状态: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;searchConditions.state&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;searchConditions.state&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;clear&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1 solid&quot;</span> <span class="attr">colspa</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>文章标题<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>分类<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>发表时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>状态<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">&quot;(article,index) in articleList&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;article.title&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;article.category&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;article.time&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;article.state&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//导入vue模块</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;https://unpkg.com/vue@3/dist/vue.esm-browser.js&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//创建vue应用实例</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">createApp</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">searchConditions</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">category</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">state</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//定义数据</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">articleList</span>: [&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">title</span>: <span class="string">&quot;医疗反腐绝非砍医护收入&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">category</span>: <span class="string">&quot;时事&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">time</span>: <span class="string">&quot;2023-09-5&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">state</span>: <span class="string">&quot;已发布&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">title</span>: <span class="string">&quot;中国男篮缘何一败涂地？&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">category</span>: <span class="string">&quot;篮球&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">time</span>: <span class="string">&quot;2023-09-5&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">state</span>: <span class="string">&quot;草稿&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">title</span>: <span class="string">&quot;华山景区已受大风影响阵风达7-8级，未来24小时将持续&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">category</span>: <span class="string">&quot;旅游&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">time</span>: <span class="string">&quot;2023-09-5&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">state</span>: <span class="string">&quot;已发布&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;]</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">clear</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//在methods对应的方法里面，使用this就代表式vue实例，可以使用this获取到vue实例</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">searchConditions</span>.<span class="property">category</span> = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">searchConditions</span>.<span class="property">state</span> = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>)<span class="comment">//控制html元素</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="vue生命周期">vue生命周期</h2><h3 id="钩子函数">钩子函数</h3><ul><li>生命周期的八个阶段：每个阶段会自动执行一个生命周期方法(钩子)，让开发者有机会在特定的阶段执行自己的代码</li></ul><table><thead><tr><th>状态</th><th>阶段周期</th></tr></thead><tbody><tr><td>beforeCreate</td><td>创建前</td></tr><tr><td>created</td><td>创建后</td></tr><tr><td>beforeMount</td><td>载入前</td></tr><tr><td>mounted</td><td>挂载完成</td></tr><tr><td>beforeUpdate</td><td>数据更新前</td></tr><tr><td>updated</td><td>数据更新后</td></tr><tr><td>beforeUnmount</td><td>组件销毁前</td></tr><tr><td>unmounted</td><td>组件销毁后</td></tr></tbody></table><div class="note info flat"><p><code>mounted</code>最为重要</p></div><h2 id="axios异步请求">Axios异步请求</h2><ul><li>介绍：Axios对原生的Ajax进行了封装，简化书写，快速开发。</li><li>官网：<ahref="https://www.axios-http.cn">https://www.axios-http.cn</a></li></ul><h3 id="axios使用">Axios使用</h3><ul><li>引入Axios的js文件</li><li>使用Axios发生请求，并获取相应结果 安装Axios</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="axios别名请求">Axios别名请求</h4><h5 id="get使用">get使用</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">axios.<span class="title function_">get</span>(<span class="string">&quot;http://localhost:8080/article/getAll&quot;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//成功的回调</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//result代表服务器响应的所有数据，包含了响应头响应体</span></span></span><br><span class="line"><span class="language-javascript">               <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">catch</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        );</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="post添加数据">post添加数据</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">   <span class="keyword">let</span> article=&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">title</span>:<span class="string">&#x27;明天会更好&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">category</span>:<span class="string">&#x27;生活&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">time</span>:<span class="string">&#x27;2000-02-02&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">stata</span>:<span class="string">&#x27;已发布&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;    axios.<span class="title function_">post</span>(<span class="string">&quot;http://localhost:8080/article/add&quot;</span>,article).<span class="title function_">then</span>(<span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//成功的回调</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//result代表服务器响应的所有数据，包含了响应头响应体</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;).<span class="title function_">catch</span>(</span></span><br><span class="line"><span class="language-javascript">            <span class="function"><span class="params">result</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        );</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;vue入门&quot;&gt;Vue入门&lt;/h2&gt;
&lt;h3 id=&quot;vue安装&quot;&gt;Vue安装&lt;/h3&gt;
&lt;h4 id=&quot;通过es-模块快速将vue3导入到一个页面中&quot;&gt;通过ES
模块快速将vue3导入到一个页面中&lt;/h4&gt;
&lt;figure class=&quot;highlight</summary>
        
      
    
    
    
    <category term="黑马程序 vue+spring项目实现" scheme="https://blog.zs13.tech/categories/%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F-vue-spring%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/"/>
    
    
    <category term="vue" scheme="https://blog.zs13.tech/tags/vue/"/>
    
    <category term="学习笔记" scheme="https://blog.zs13.tech/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>spring项目 文章篇-黑马vue+spring项目学习笔记</title>
    <link href="https://blog.zs13.tech/posts/13529/"/>
    <id>https://blog.zs13.tech/posts/13529/</id>
    <published>2024-06-28T07:45:00.000Z</published>
    <updated>2024-07-23T05:27:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新增文章分类">新增文章分类</h2><div class="note flat"><ul><li>使用validation完成参数校验</li><li>在service层需要为Category的createUser、createTime、updateTime属性赋值</li></ul></div><h2 id="获取文章分类">获取文章分类</h2><h3 id="修改传出时间的json格式">修改传出时间的json格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建时间  </span></span><br><span class="line"><span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span>  </span><br><span class="line"><span class="keyword">private</span> LocalDateTime createTime;  </span><br><span class="line"><span class="comment">//更新时间  </span></span><br><span class="line"><span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span>  </span><br><span class="line"><span class="keyword">private</span> LocalDateTime updateTime;</span><br></pre></td></tr></table></figure><h2 id="获取文章分页">获取文章分页</h2><blockquote><p>对应非必要参数可以在参数前面加上<code>@RequestParam(required = false)</code></p></blockquote>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;新增文章分类&quot;&gt;新增文章分类&lt;/h2&gt;
&lt;div class=&quot;note</summary>
        
      
    
    
    
    <category term="文章分类" scheme="https://blog.zs13.tech/categories/%E6%96%87%E7%AB%A0%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="学习笔记" scheme="https://blog.zs13.tech/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="spring" scheme="https://blog.zs13.tech/tags/spring/"/>
    
    <category term="spring项目" scheme="https://blog.zs13.tech/tags/spring%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>spring项目 登录篇-黑马vue+spring项目学习笔记</title>
    <link href="https://blog.zs13.tech/posts/2607/"/>
    <id>https://blog.zs13.tech/posts/2607/</id>
    <published>2024-06-27T08:12:00.000Z</published>
    <updated>2024-07-23T05:28:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="登录认证">登录认证</h2><div class="note primary flat"><p>目标：让为登录的用户无法访问特定网页</p></div><h3 id="jwt令牌">JWT令牌</h3><p>  令牌是一段字符串 <div class="note info flat"><ul><li>承载业务数据，减少后续请求查询数据库的次数</li><li>防篡改，保证信息的合法性和有效性</li></ul></div></p><ul><li>全称 JSON Web Token(https://jwt.io/)</li><li>定义了一种简洁的、自包含的格式、用于通信双方以<code>json</code>格式<code>安全</code>的传输信息。</li><li>组成<ul><li>第一部分：Header，记录令牌类型、签名算法等。</li><li>第二部分：Payload（有效载荷），携带一些自定义信息、默认信息。</li><li>第三部分：Signature（签名），防止Token被篡改、确保安全性。将header、payload，并加入指定密钥，通过与指定签名算法而来。</li><li>通过Base64进行编码</li></ul></li></ul><h4 id="jwt相关依赖">JWT相关依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.auth0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="jwt令牌的生成">JWT令牌的生成</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">genToke</span><span class="params">()</span>&#123;  </span><br><span class="line">    Map&lt;String,Object&gt; claims = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();  </span><br><span class="line">    claims.put(<span class="string">&quot;id&quot;</span>,<span class="number">1</span>);  </span><br><span class="line">    claims.put(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;zhangsan&quot;</span>);  </span><br><span class="line">    <span class="type">String</span> <span class="variable">Token</span> <span class="operator">=</span> JWT.create()  </span><br><span class="line">            .withClaim(<span class="string">&quot;user&quot;</span>, claims)  </span><br><span class="line">            .withExpiresAt(<span class="keyword">new</span> <span class="title class_">Date</span>(System.currentTimeMillis() + <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">12</span>))  </span><br><span class="line">            .sign(Algorithm.HMAC256(<span class="string">&quot;密钥&quot;</span>));  </span><br><span class="line">  </span><br><span class="line">    System.out.println(Token);  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="jwt令牌验证">JWT令牌验证</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">parseToken</span><span class="params">()</span>&#123;</span><br><span class="line">    String token=<span class="string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9&quot;</span>+</span><br><span class="line">            <span class="string">&quot;.eyJ1c2VyIjp7ImlkIjoxLCJ1c2VybmFtZSI6InpoYW5nc2FuIn0sImV4cCI6MTcxOTUzNDgyNn0&quot;</span>+</span><br><span class="line">            <span class="string">&quot;.RPFa6dpp3hYTAqsiBUnwkITSn9XWNBAnFhYacuuJBbw&quot;</span>;</span><br><span class="line">    <span class="type">JWTVerifier</span> <span class="variable">jwtverifier</span> <span class="operator">=</span> JWT.require(Algorithm.HMAC256(<span class="string">&quot;密钥&quot;</span>)).build();</span><br><span class="line">    <span class="type">DecodedJWT</span> <span class="variable">decodedJWT</span> <span class="operator">=</span> jwtverifier.verify(token);</span><br><span class="line">    Map&lt;String, Claim&gt; claimMap = decodedJWT.getClaims();</span><br><span class="line">    System.out.println(claimMap.get(<span class="string">&quot;user&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="jwt工具类">JWT工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.auth0.jwt.JWT;  </span><br><span class="line"><span class="keyword">import</span> com. auth0.jwt.algorithms.Algorithm;  </span><br><span class="line"><span class="keyword">import</span> java.util.Date;  </span><br><span class="line"><span class="keyword">import</span> java.util.Map;  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtUtil</span> &#123;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">KEY</span> <span class="operator">=</span> <span class="string">&quot;lingzxl&quot;</span>;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">//接收业务数据,生成token并返回  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">genToken</span><span class="params">(Map&lt;String, Object&gt; claims)</span> &#123;  </span><br><span class="line">        <span class="keyword">return</span> JWT.create()  </span><br><span class="line">                .withClaim(<span class="string">&quot;claims&quot;</span>, claims)  </span><br><span class="line">                .withExpiresAt(<span class="keyword">new</span> <span class="title class_">Date</span>(System.currentTimeMillis() + <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">12</span>))  </span><br><span class="line">                .sign(Algorithm.HMAC256(KEY));  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//接收token,验证token,并返回业务数据  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, Object&gt; <span class="title function_">parseToken</span><span class="params">(String token)</span> &#123;  </span><br><span class="line">        <span class="keyword">return</span> JWT.require(Algorithm.HMAC256(KEY))  </span><br><span class="line">                .build()  </span><br><span class="line">                .verify(token)  </span><br><span class="line">                .getClaim(<span class="string">&quot;claims&quot;</span>)  </span><br><span class="line">                .asMap();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="前置拦截器token验证">前置拦截器Token验证</h3><ol type="1"><li>创建<code>interceptors</code>包</li><li>创建<code>LoginInterceptor</code>类并实现<code>HandlerInterceptor</code></li><li>重写<code>preHandle</code>方法 &gt;参考代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;  </span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> request.getHeader(<span class="string">&quot;Authorization&quot;</span>);  </span><br><span class="line">        <span class="keyword">try</span>&#123;  </span><br><span class="line">            Map&lt;String, Object&gt; claims = JwtUtil.parseToken(token);  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;  </span><br><span class="line">        <span class="comment">//登录失败</span></span><br><span class="line">            <span class="comment">//设置http响应码为401  </span></span><br><span class="line">            response.setStatus(<span class="number">401</span>);  </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="comment">//登录成功</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4" type="1"><li>注册拦截器</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;  </span><br><span class="line">    <span class="keyword">private</span> LoginInterceptor loginInterceptor;  </span><br><span class="line">    <span class="meta">@Autowired</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLoginInterceptor</span><span class="params">(LoginInterceptor loginInterceptor)</span>&#123;  </span><br><span class="line">        <span class="built_in">this</span>.loginInterceptor=loginInterceptor;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;  </span><br><span class="line">        <span class="comment">//登录和注册接口不拦截  </span></span><br><span class="line">        registry.addInterceptor(loginInterceptor).excludePathPatterns(<span class="string">&quot;/user/login&quot;</span>,<span class="string">&quot;/user/register&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2id="使得返回json数据是不传出password参数">使得返回json数据是不传出password参数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@JsonIgnore</span>  </span><br><span class="line"><span class="keyword">private</span> String password;</span><br></pre></td></tr></table></figure><h3 id="threadlocal">ThreadLocal</h3><p>提供线程局部变量 <div class="note info flat"><ul><li>用于存取数据:set()/get()</li><li>使用Threadloacl存储的数据，<code>线程安全</code></li><li>用完记得调用remove方法释放</li></ul></div></p><h4 id="使用原因">使用原因</h4><p>  使得解析Token之类的操作只进行一次，减少计算资源的消耗。</p><h4 id="工具代码">工具代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ThreadLocalUtil</span> &#123;  </span><br><span class="line">    <span class="comment">//提供ThreadLocal对象,  </span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">ThreadLocal</span> <span class="variable">THREAD_LOCAL</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>();  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//根据键获取值  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T <span class="title function_">get</span><span class="params">()</span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> (T) THREAD_LOCAL.get();  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">//存储键值对  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(Object value)</span>&#123;  </span><br><span class="line">        THREAD_LOCAL.set(value);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//清除ThreadLocal 防止内存泄漏  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">()</span>&#123;  </span><br><span class="line">        THREAD_LOCAL.remove();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="后置拦截器">后置拦截器</h4><div class="note default flat"><ul><li>用于清除tomcat服务完一个请求后本地线程里的变量，防止内存泄漏</li></ul></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//后置拦截器  </span></span><br><span class="line"><span class="meta">@Override</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception &#123;  </span><br><span class="line">    <span class="comment">//清除ThreadLocal中的数据  </span></span><br><span class="line">    ThreadLocalUtil.remove();  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更新用户基本信息">更新用户基本信息</h2><div class="note flat"><ul><li>使用<code>@PutMapping("/update")</code>接收</li><li>在接受参数处写上<code>@RequestBody</code>用于把前端传入的json数据转换成User对象类</li></ul></div>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;登录认证&quot;&gt;登录认证&lt;/h2&gt;
&lt;div class=&quot;note primary flat&quot;&gt;&lt;p&gt;目标：让为登录的用户无法访问特定网页&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;jwt令牌&quot;&gt;JWT令牌&lt;/h3&gt;
&lt;p&gt;  令牌是一段字符串 &lt;div</summary>
        
      
    
    
    
    <category term="黑马程序 vue+spring项目实现" scheme="https://blog.zs13.tech/categories/%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F-vue-spring%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/"/>
    
    <category term="学习笔记" scheme="https://blog.zs13.tech/categories/%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F-vue-spring%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="学习笔记" scheme="https://blog.zs13.tech/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="spring项目" scheme="https://blog.zs13.tech/tags/spring%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>spring框架及使用-黑马vue+spring项目学习笔记</title>
    <link href="https://blog.zs13.tech/posts/36171/"/>
    <id>https://blog.zs13.tech/posts/36171/</id>
    <published>2024-06-27T06:57:00.000Z</published>
    <updated>2024-07-23T05:32:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="spring-validation">Spring Validation</h2><blockquote><p>spring提供的一个参数校验框架，使用预定义的注解完成参数校验 -直接写<code>if语句</code>数据校验过于繁琐一个参选可能就要写出好几个条件参数一多容易记混写错，同时代码阅读性差</p></blockquote><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td><span class="citation" data-cites="Pattern">@Pattern</span></td><td>通过正则表达式校验数据</td></tr><tr><td><span class="citation" data-cites="NotNull">@NotNull</span></td><td>值不能为Null</td></tr><tr><td><span class="citation" data-cites="NotEmpty">@NotEmpty</span></td><td>值不能为Null，并且内容不为空</td></tr><tr><td><span class="citation" data-cites="Email">@Email</span></td><td>满足邮箱格式</td></tr><tr><td><span class="citation" data-cites="URL">@URL</span></td><td>满足URL格式</td></tr></tbody></table><h3 id="pattern使用步骤"><span class="citation"data-cites="Pattern使用步骤">@Pattern使用步骤</span></h3><ol type="1"><li>引入Spring Validation起步依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在maven项目的pom.xml中添加--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2" type="1"><li>在参数前面添加@Pattern注解</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用正则表达 5-16个字符</span></span><br><span class="line"><span class="keyword">public</span> Result <span class="title function_">result</span><span class="params">(<span class="meta">@Pattern(regexp = &quot;^\\S&#123;5,16&#125;$&quot;)</span> String username, <span class="meta">@Pattern(regexp = &quot;^\\S&#123;5,16&#125;$&quot;)</span> String password)</span>&#123;&#125;</span><br></pre></td></tr></table></figure><ol start="3" type="1"><li>在Controller类上添加Validated</li></ol><h3 id="使用后一些问题的解决">使用后一些问题的解决</h3><h4 id="参数校验失败异常处理">参数校验失败异常处理</h4><ol type="1"><li>创建<code>exception</code>包存放异常处理类</li><li>创建全局异常处理类<code>GlobalExceptionHandler</code></li><li>在类上添加<code>@RestControllerAdvice</code>注解</li><li>使用springframework包下的StringUtils的hasLength可以判断e.gemMessage中是否有封装错误信息</li><li>不想用默认的报错信息也可以选择在@Pattern注解中传入message参数自定义报错信息</li></ol><ul><li>样例</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@RestControllerAdvice  </span><br><span class="line">public class GlobalExceptionHandler &#123;  </span><br><span class="line">    @ExceptionHandler(Exception.class)  </span><br><span class="line">    public Result handleException(Exception e) &#123;  </span><br><span class="line">        e.printStackTrace();  </span><br><span class="line">        return Result.error(StringUtils.hasLength(e.getMessage())? e.getMessage(): &quot;未知错误&quot;);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info flat"><p>使用前效果</p></div><p><img src="https://r2.zs13.eu.org/2024/06/202406271504258.webp"alt="使用前效果" /> <div class="note success flat"><p>使用后效果</p></div> <imgsrc="https://r2.zs13.eu.org/2024/06/202406271540357.webp" /><imgsrc="https://r2.zs13.eu.org/2024/06/202406271540948.webp" /></p><h3 id="validated的使用"><span class="citation"data-cites="Validated的使用">@Validated的使用</span></h3><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td><span class="citation" data-cites="NotNull">@NotNull</span></td><td>值不能为Null</td></tr><tr><td><span class="citation" data-cites="NotEmpty">@NotEmpty</span></td><td>值不能为Null，并且内容不为空</td></tr><tr><td><span class="citation" data-cites="Email">@Email</span></td><td>满足邮箱格式</td></tr><tr><td><span class="citation" data-cites="Validated">@Validated</span></td><td>加在方法参数对象前面才可以使数据类中是注解生效</td></tr></tbody></table><h3 id="分组校验">分组校验</h3><blockquote><p>把校验项进行归类分组，在完成不同的功能的时候校验指定组中的校验项1.定义分组 2.定义校验项目时指定归属的分组 3.校验时指定要校验的分组</p></blockquote><h4 id="定义分组">定义分组</h4><div class="note info flat"><p>假设有有两个分组，分别为Add和Update，则在对应的pojo类中写出这两个名字的接口</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置分组</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Add</span>&#123;  </span><br><span class="line">  <span class="comment">//无内容</span></span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Update</span>&#123;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="定义校验项目时指定归属的分组">定义校验项目时指定归属的分组</h4><div class="note info flat"><p>在要校验的对应属性的注解上添加grups分组</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//主键ID  </span></span><br><span class="line"><span class="meta">@NotNull(groups = Update.class)</span>  </span><br><span class="line"><span class="keyword">private</span> Integer id;  </span><br><span class="line"><span class="comment">//分类名称  </span></span><br><span class="line"><span class="meta">@NotEmpty(groups = &#123;Update.class,Add.class&#125;)</span>  </span><br><span class="line"><span class="keyword">private</span> String categoryName;</span><br></pre></td></tr></table></figure><h4 id="校验时指定要校验的分组">校验时指定要校验的分组</h4><div class="note info flat"><p>在要校验的传入值的@Validated</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PutMapping</span>  </span><br><span class="line"><span class="keyword">public</span>  Result <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Validated(Category.Update.class)</span> Category category)</span>&#123;  </span><br><span class="line">    categoryService.update(category);  </span><br><span class="line">    <span class="keyword">return</span> Result.success();  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="默认分组及分组的继承">默认分组及分组的继承</h4><div class="note info flat"><p>如果说某个校验项没有指定分组，默认属于Default分组。分组之间可以继承，A extends B 那么A中拥有的B中所有的</p></div><h3 id="自定义校验">自定义校验</h3><blockquote><p>已有的注解不能满足所有的校验需求，特殊的情况下需要自定义校验(自定义校验注解)1.自定义注解State2.自定义校验数据的类StateValidation实现ConstraintValidator接口3.在需要校验的地方使用自定义校验</p></blockquote><h4 id="自定义注解state">自定义注解State</h4><blockquote><p>创建注解类State 注解类State中注解的含义</p></blockquote><table><colgroup><col style="width: 63%" /><col style="width: 36%" /></colgroup><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td><span class="citation"data-cites="Documented">@Documented</span></td><td>元注解</td></tr><tr><td><span class="citation"data-cites="Target">@Target</span>({ElementType.FIELD})</td><td>元注解 表面注解能用在什么上面</td></tr><tr><td><span class="citation"data-cites="Retention">@Retention</span>(RetentionPolicy.RUNTIME)</td><td>元注解 用于标注保留到什么阶段</td></tr><tr><td><span class="citation"data-cites="Constraint">@Constraint</span>(validatedBy ={StateValidation.class})</td><td>指定提供校验规则的类</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//元注解  </span></span><br><span class="line"><span class="meta">@Documented</span>  </span><br><span class="line"><span class="comment">//元注解 表面注解能用在什么上门  </span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.FIELD&#125;)</span>  </span><br><span class="line"><span class="comment">//元注解 用于标注保留到什么阶段  </span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span>  </span><br><span class="line"><span class="comment">//指定提供校验规则的类  </span></span><br><span class="line"><span class="meta">@Constraint(validatedBy = &#123;StateValidation.class&#125;)</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> State &#123;  </span><br><span class="line">    <span class="comment">//提供校验失败后失败的提示信息  </span></span><br><span class="line">    String <span class="title function_">message</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;state参数的值只能是已发布或者草稿&quot;</span>;  </span><br><span class="line">    <span class="comment">//指定分组  </span></span><br><span class="line">    Class&lt;?&gt;[] groups() <span class="keyword">default</span> &#123;&#125;;  </span><br><span class="line">    <span class="comment">//负载 获取到State注解的附加信息  </span></span><br><span class="line">    Class&lt;? <span class="keyword">extends</span> <span class="title class_">Payload</span>&gt;[] payload() <span class="keyword">default</span> &#123;&#125;;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4id="自定义校验数据的类statevalidation实现constraintvalidator接口">自定义校验数据的类StateValidation实现ConstraintValidator接口</h4><blockquote><p>创建StateValidation并实现ConstraintValidator&lt;给那个注解提供校验规则，校验的数据类型&gt;接口重写 <code>isValid</code>方法 如果返回<code>false</code>就不通过 返回<code>true</code> 通过</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StateValidation</span> <span class="keyword">implements</span> <span class="title class_">ConstraintValidator</span>&lt;State,String&gt; &#123;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**  </span></span><br><span class="line"><span class="comment">     *     * <span class="doctag">@param</span> s 将来要校验的数据  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> constraintValidatorContext  </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 如果返回false就不通过 返回 true 通过  </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="meta">@Override</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span><span class="params">(String s, ConstraintValidatorContext constraintValidatorContext)</span> &#123;  </span><br><span class="line">        <span class="comment">//提供校验规则  </span></span><br><span class="line">        <span class="keyword">if</span>(s==<span class="literal">null</span>)&#123;  </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;已发布&quot;</span>.equals(s) || <span class="string">&quot;草稿&quot;</span>.equals(s);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="spring-cache">Spring Cache</h2><div class="note info flat"><p>Spring Cahe是一个框架，实现了基于<code>注解</code>的缓存功能，只需要简单的添加一个注解，就能实现缓存功能。Spring Cache 提供了一层抽象，底层可以切换不同的缓存实现，例如： -EHCache - Caffeine - Redis</p></div><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="常用注解">常用注解</h3><table><colgroup><col style="width: 19%" /><col style="width: 80%" /></colgroup><thead><tr><th>注解</th><th>说明</th></tr></thead><tbody><tr><td><span class="citation"data-cites="EnableCaching">@EnableCaching</span></td><td>开启缓存功能，通常加在启动类上</td></tr><tr><td><span class="citation" data-cites="Cacheable">@Cacheable</span></td><td>在方法执行前先查询缓存中是否有数据，如果有数据，则直接返回缓存结果；如果没有缓存数据，调用方法并将方法返回值放到缓存中</td></tr><tr><td><span class="citation" data-cites="CachePut">@CachePut</span></td><td>将方法的返回值放到缓存中</td></tr></tbody></table><div class="line-block"><span class="citation"data-cites="CacheEvict">@CacheEvict</span><br />将一条或多条数据从缓存中删除</div><h4 id="cacheput"><span class="citation"data-cites="CachePut">@CachePut</span></h4><blockquote><p>Spring EL表达式是Spring表达式语言，支持在xml和注解中使用表达式，类似于JSP的EL，JSTL表达式语言。Spring开发中我们会经常涉及到调用各种资源的情况，包含普通文件、网址、正则表达式、系统变量、其他Bean的一些属性、配置文件、集合等等，我们就可以使用Spring的表达式语言实现资源的注入。Spring EL的格式为 <em><strong>#{ SpEL expression }</strong></em>。Spring表达式主要写在注解 <strong><span class="citation"data-cites="Value">@Value</span></strong>的参数中，它的作用是通过spring把值注入给某个属性。</p></blockquote><p><img src="https://r2.zs13.eu.org/2024/07/202407151407409.webp" /></p><h2 id="spring-task">Spring Task</h2><h3 id="spirng-task-介绍">Spirng Task 介绍</h3><p>应用场景: - 信用卡每月还款提醒 - 银行贷款每月还款提醒 -火车售票系统处理未支付订单 - 入职纪念日为用户发送通知</p><h3 id="spring-task入门案例">Spring Task入门案例</h3><ol type="1"><li>导入Maven坐标Spring-context</li><li>启动类添加注解@EnableScheduling开启任务调度</li><li>自定义定时任务类</li></ol><p>样例 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>  </span><br><span class="line"><span class="meta">@Slf4j</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyTask</span> &#123;  </span><br><span class="line">    <span class="meta">@Scheduled(cron = &quot;0/5 * * * * ?&quot;)</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">executeTask</span><span class="params">()</span>&#123;  </span><br><span class="line">       log.info(<span class="string">&quot;定时任务开始执行:&#123;&#125;&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>());  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;spring-validation&quot;&gt;Spring Validation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;spring提供的一个参数校验框架，使用预定义的注解完成参数校验</summary>
        
      
    
    
    
    <category term="黑马程序 vue+spring项目实现" scheme="https://blog.zs13.tech/categories/%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F-vue-spring%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/"/>
    
    <category term="学习笔记" scheme="https://blog.zs13.tech/categories/%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F-vue-spring%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="spring" scheme="https://blog.zs13.tech/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>认识O(NlogN) 递归</title>
    <link href="https://blog.zs13.tech/posts/40486/"/>
    <id>https://blog.zs13.tech/posts/40486/</id>
    <published>2024-06-10T05:05:00.000Z</published>
    <updated>2024-07-23T05:25:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="知识点">知识点</h2><h3 id="求中点">求中点</h3><p>   正常想法为<code>mid</code>=(<code>L</code>+<code>R</code>)/2，但在特殊情况下可能会溢出导致结果的不准确如两个值都很大的时候<code>L+R</code>会<code>溢出</code>，此时可以把<code>L</code>提取出来变成<code>mid = L + (R-L)/2</code>。 &gt; 在程序里可以写成 <code>mid = L + （(R-L) &gt;&gt; 1)</code>;算术左移一位等同于除以2 比使用<code>/</code>性能更好。</p><h3id="递归行为时间复杂度计算master公式">递归行为时间复杂度计算(master公式)</h3><p>T(N)=a*T(N/b)+O(N^d) 母   次 子</p><table><thead><tr><th>公式</th><th>时间复杂度</th><th></th></tr></thead><tbody><tr><td>logb(a) &lt; d</td><td>O(N^d)</td><td></td></tr><tr><td>logb(a) &gt; d</td><td>O(N^logb(a))</td><td></td></tr><tr><td>logb(a) == d</td><td>O(N^d*logN)</td><td></td></tr></tbody></table>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;知识点&quot;&gt;知识点&lt;/h2&gt;
&lt;h3 id=&quot;求中点&quot;&gt;求中点&lt;/h3&gt;
&lt;p&gt;  </summary>
        
      
    
    
    
    <category term="数据结构与算法" scheme="https://blog.zs13.tech/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://blog.zs13.tech/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="学习笔记" scheme="https://blog.zs13.tech/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="数据结构" scheme="https://blog.zs13.tech/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习day01：复杂度与简单排序算法</title>
    <link href="https://blog.zs13.tech/posts/21118/"/>
    <id>https://blog.zs13.tech/posts/21118/</id>
    <published>2024-06-05T05:42:00.000Z</published>
    <updated>2024-07-23T05:26:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前置知识点的学习">前置知识点的学习</h2><h3 id="计算机逻辑运算">计算机逻辑运算</h3><div class="note info flat"><ul><li>与 ：当所有输入条件同时满足1，输出1；输入条件只要有0就输出0。java :&amp;</li><li>或：输入条件有1即输出1；一个1也没有才输出0。java : |</li><li>非：输出结果与输入条件取反。0变1，1变0。 java : !</li><li>异或：仅当两输入取不同的值时异或结果为1；否则均为0。java : ^可以理解为无进位加法</li></ul></div><p><code>异或</code>的规则: 1. 0^N= N N^N=0 2. 符合交换律和结合率A<sup>B=B</sup>A  (A<sup>B)</sup>B=A<sup>(B</sup>C)</p><h4 id="通过异或运算交换两个变量的值">通过异或运算交换两个变量的值</h4><div class="note warning flat"><p>如果a和b指向同一个内存会导致N^N=0，而出现问题，在平时不推荐使用。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">main</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">234</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">349</span>;</span><br><span class="line">        a = a ^ b;</span><br><span class="line">        b = a ^ b;</span><br><span class="line">        a = a ^ b;</span><br><span class="line">        System.out.println(<span class="string">&quot;a:&quot;</span>+a+<span class="string">&quot; &quot;</span>+<span class="string">&quot;b:&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//运行结果为a:349 b:234</span></span><br></pre></td></tr></table></figure><h2 id="复杂度计算">复杂度计算</h2><p>  以<code>冒泡排序</code>为例：冒泡排序每次循环所用的时间分别为1<sub>n-1,1</sub>n-2,1-n<sub>3,…,1</sub>2。为一个<code>d</code>为<code>1</code>的<code>等差数列</code>则这个算法的时间消耗为<code>Sn=n*a1+n(n-1)d/2</code>去掉<code>常数</code>和<code>低次幂的数</code>只保留<code>最高次幂的数</code>结果为O(n²)。 &gt;时间复杂度按算法的最坏情况记。例：插入排序最好情况O(N)，最坏情况O(N²)。</p><h2id="提取出一个二进制数最右的一个1所在的位置">提取出一个二进制数最右的一个1所在的位置</h2><table><thead><tr><th>变量名</th><th>二进制数</th></tr></thead><tbody><tr><td></td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table><div class="line-block"></div><h2id="常见排序算法时间复杂度和空间复杂度">常见排序算法时间复杂度和空间复杂度</h2><p><img src="https://r2.zs13.eu.org/2024/06/202406051749013.webp" /></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;前置知识点的学习&quot;&gt;前置知识点的学习&lt;/h2&gt;
&lt;h3 id=&quot;计算机逻辑运算&quot;&gt;计算机逻辑运算&lt;/h3&gt;
&lt;div class=&quot;note info flat&quot;&gt;&lt;ul&gt;
&lt;li&gt;与 ：当所有输入条件同时满足1，输出1；输入条件只要有0就输出0。java</summary>
        
      
    
    
    
    <category term="数据结构与算法" scheme="https://blog.zs13.tech/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://blog.zs13.tech/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="学习笔记" scheme="https://blog.zs13.tech/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="数据结构" scheme="https://blog.zs13.tech/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Windows重装后配置-软件安装篇</title>
    <link href="https://blog.zs13.tech/posts/14369/"/>
    <id>https://blog.zs13.tech/posts/14369/</id>
    <published>2024-04-18T14:36:00.000Z</published>
    <updated>2024-07-23T07:36:22.814Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前期准备">前期准备</h1><h2 id="必要的一些软件">必要的一些软件</h2><h3 id="图吧工具箱">图吧工具箱</h3><p>拥有安装系统(重装)后一些实用的软件，可以对硬件进行稳定性测试； <imgsrc="https://www.tbtool.cn/rc_images/__.png" /> <ahref="https://www.tbtool.cn/">点击前往官网</a></p><h3 id="加速访问github工具">加速访问github工具</h3><h4 id="steamwatt-toolkit">steam++(Watt Toolkit)</h4><p><img src="https://steampp.net/images/home/js.webp" /></p><table><colgroup><col style="width: 8%" /><col style="width: 91%" /></colgroup><thead><tr><th>下载地址</th><th>链接</th></tr></thead><tbody><tr><td>官网</td><td><a href="https://steampp.net/">Watt Toolkit</a></td></tr><tr><td>github</td><td>https://github.com/BeyondDimension/SteamTools</td></tr><tr><td>gitee</td><td>https://gitee.com/rmbgame/SteamTools</td></tr><tr><td>微软商店</td><td>https://apps.microsoft.com/detail/9mtcfhs560ng?hl=en-us&amp;gl=US</td></tr></tbody></table><h3id="驱动安装软件可选推荐准备一个">驱动安装软件（可选，推荐准备一个）</h3><p>个别系统镜像安装后可能没有网卡驱动这时就需要一个带网卡驱动的驱动安装器帮忙安装驱动，如果系统安装后有网卡驱动则可以跳过windows会自带下载需要的驱动。<a href="http://drivergenius.com/wangka/">驱动精灵网卡版</a></p><h3 id="系统激活工具可选">系统激活工具（可选）</h3><p>有能力的推荐支持正版oem机器一般来说不需要这个，主板有会内置激活码自动激活windows。kms：https://github.com/zbezj/HEU_KMS_Activator/releases</p><h3 id="代理工具可选">代理工具(可选)</h3><p>因为国内网络下载编程所需的安装包有时很慢所以有使用外网的需求,没有使用外网的可以跳过。</p><table><colgroup><col style="width: 17%" /><col style="width: 82%" /></colgroup><thead><tr><th>代理工具</th><th>链接</th></tr></thead><tbody><tr><td>clash-verge-rev</td><td><ahref="https://github.com/clash-verge-rev/clash-verge-rev">clash-verge-rev</a></td></tr><tr><td>v2rayN</td><td><a href="https://github.com/2dust/v2rayN">v2rayN</a></td></tr></tbody></table><h2 id="系统盘制作">系统盘制作</h2><h4 id="系统盘制作工具">系统盘制作工具</h4><table><colgroup><col style="width: 2%" /><col style="width: 17%" /><col style="width: 2%" /><col style="width: 77%" /></colgroup><thead><tr><th>制作工具</th><th>链接</th><th>推荐等级</th><th>区别</th></tr></thead><tbody><tr><td>微PE工具箱</td><td>https://www.wepe.com.cn/download.html</td><td>★★★★★</td><td>优点：一款清量无广告的pe制作工具，内置了多个重装系统会用到的工具（磁盘管理，eif修复）可以方便的修复<mark class="hl-label blue">windows</mark> 系统。兼容性好。<br>缺点：只能用于<mark class="hl-label blue">windows</mark> 系统的安装，无法用于<mark class="hl-label orange">linux</mark> 系统。</td></tr><tr><td>ventoy</td><td>https://www.ventoy.net/cn/</td><td>★★★★☆</td><td>优点：支持多个操作系统，可用用来安装<mark class="hl-label orange">linux</mark> 系统，启动使用了grub支持自定义启动页面。<br>缺点：设置相对于微pe复杂需要进行一定的配置不自带磁盘管理之类的软件（可以导入微pe的iso曲线救国），兼容性不然微pe，在给别电脑上要关闭安全启动才可以被引导启动（比如我的联想拯救者）</td></tr><tr><td>rufus</td><td>https://rufus.ie/zh/</td><td>★★★☆☆</td><td>优点：一款功能简单命令的系统盘制作工具，选择系统精选然后制作即可，轻量快速。可以用来安装<mark class="hl-label orange">linux</mark> <br>缺点：只支持单一系统，不能同时存放多个系统如<mark class="hl-label blue">windows10</mark> 和<mark class="hl-label blue">windows11</mark> </td></tr></tbody></table><h4 id="系统镜像下载">系统镜像下载</h4><table><colgroup><col style="width: 8%" /><col style="width: 91%" /></colgroup><thead><tr><th>系统镜像</th><th>下载链接</th></tr></thead><tbody><tr><td>windows</td><td>老牌下载网站：<ahref="https://next.itellyou.cn/Identity/Account/Login?ReturnUrl=%2FOriginal%2FIndex">MSDN</a></td></tr><tr><td>ubuntu</td><td>https://cn.ubuntu.com/download</td></tr><tr><td>archlinux</td><td>https://archlinux.org/download/</td></tr></tbody></table><h1 id="安装完成激活系统后相关配置">安装完成激活系统后相关配置</h1><h2 id="安装防火墙软件">安装防火墙软件</h2><p>安装防火墙让windows defender闭嘴。 我安装的是<ahref="https://www.huorong.cn/">火绒</a>我不要去他杀毒能力有多好，我的需求就是轻量，然后能让Windowsdefender闭嘴。 ## winget安装软件使用winget安装的好处，不用到处下载软件包还要经常更新软件包，可以一个命令就安装最新的软件包。winget安装大量软件脚本生成网站：https://winstall.app/ ### 安装代理winget不使用代理下载软件包会相当的慢，切换国内源也不能让第三方下的东西变快比如python的安装包。### 软件列表 <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#游览器</span></span><br><span class="line">winget install <span class="literal">--id</span>=Mozilla.Firefox <span class="literal">-e</span>  <span class="comment">#火狐</span></span><br><span class="line">winget install <span class="literal">--id</span>=Google.Chrome  <span class="literal">-e</span> <span class="comment">#谷歌</span></span><br><span class="line"><span class="comment">#下载软件</span></span><br><span class="line">winget install <span class="literal">--id</span>=c0re100.qBittorrent<span class="literal">-Enhanced-Edition</span>  <span class="literal">-e</span> <span class="comment">#qbit增强版</span></span><br><span class="line">winget install <span class="literal">--id</span>=Alibaba.aDrive <span class="literal">-e</span>   <span class="comment">#阿里网盘</span></span><br><span class="line"><span class="comment">#游戏</span></span><br><span class="line">winget install <span class="literal">--id</span>=Valve.Steam  <span class="literal">-e</span> <span class="comment">#steam</span></span><br><span class="line"><span class="comment">#录屏</span></span><br><span class="line">winget install <span class="literal">--id</span>=OBSProject.OBSStudio  <span class="literal">-e</span> <span class="comment">#obs</span></span><br><span class="line"><span class="comment">#makrdwon笔记（blog用）</span></span><br><span class="line">winget install <span class="literal">--id</span>=Obsidian.Obsidian  <span class="literal">-e</span></span><br><span class="line">winget install <span class="literal">--id</span>=SaeraSoft.CaesiumImageCompressor  <span class="literal">-e</span> <span class="comment">#图片压缩软件</span></span><br><span class="line">winget install <span class="literal">--id</span>=PicGo.PicGo  <span class="literal">-e</span> <span class="comment">#picgo 图片上次图床软件</span></span><br><span class="line"><span class="comment">#通讯软件</span></span><br><span class="line">winget install <span class="literal">--id</span>=Xiaoyaoyixia.KOOK <span class="literal">-e</span>   <span class="comment">#kook</span></span><br><span class="line">winget install <span class="literal">--id</span>=Tencent.QQ.NT <span class="literal">-e</span>  <span class="comment">#qq</span></span><br><span class="line">winget install <span class="literal">--id</span>=Tencent.WeChat <span class="literal">-e</span> <span class="comment">#微信</span></span><br><span class="line">winget install <span class="literal">--id</span>=Alibaba.DingTalk  <span class="literal">-e</span> <span class="comment">#钉钉</span></span><br><span class="line">winget install <span class="literal">--id</span>=Tencent.TencentMeeting <span class="literal">-e</span> <span class="comment">#腾讯会议</span></span><br><span class="line"><span class="comment">#音乐软件</span></span><br><span class="line">winget install <span class="literal">--id</span>=Spotify.Spotify <span class="literal">-v</span> <span class="string">&quot;undefined&quot;</span> <span class="literal">-e</span> <span class="comment">#spotify</span></span><br><span class="line">winget install <span class="literal">--id</span>=NetEase.CloudMusic.Beta  <span class="literal">-e</span> <span class="comment">#网易云音乐</span></span><br><span class="line"><span class="comment">#压缩软件</span></span><br><span class="line">winget install <span class="literal">--id</span>=M2Team.NanaZip  <span class="literal">-e</span> <span class="comment">#nana 7zip的分支项目支持win11的右键</span></span><br><span class="line">winget install <span class="literal">--id</span>=<span class="number">7</span>zip.<span class="number">7</span>zip  <span class="literal">-e</span> <span class="comment">#7-zip</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#编程相关软件</span></span><br><span class="line">winget install <span class="literal">--id</span>=JetBrains.IntelliJIDEA.Ultimate <span class="literal">-e</span>  ;</span><br><span class="line">winget install <span class="literal">--id</span>=Git.Git <span class="literal">-e</span>  ;</span><br><span class="line">winget install <span class="literal">--id</span>=Microsoft.VisualStudioCode <span class="literal">-e</span>  ;</span><br><span class="line">winget install <span class="literal">--id</span>=PremiumSoft.NavicatPremium <span class="literal">-e</span>  ;</span><br><span class="line">winget install <span class="literal">--id</span>=Eugeny.Tabby <span class="literal">-e</span>  ;</span><br><span class="line">winget install <span class="literal">--id</span>=Canonical.Ubuntu.<span class="number">2204</span> <span class="literal">-e</span>  ;</span><br><span class="line">winget install <span class="literal">--id</span>=WinSCP.WinSCP <span class="literal">-e</span> ;</span><br><span class="line">winget install <span class="literal">--id</span>=Oracle.MySQL <span class="literal">-e</span>  ;</span><br><span class="line">winget install <span class="literal">--id</span>=OpenJS.NodeJS.LTS <span class="literal">-e</span> </span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;前期准备&quot;&gt;前期准备&lt;/h1&gt;
&lt;h2 id=&quot;必要的一些软件&quot;&gt;必要的一些软件&lt;/h2&gt;
&lt;h3 id=&quot;图吧工具箱&quot;&gt;图吧工具箱&lt;/h3&gt;
&lt;p&gt;拥有安装系统(重装)后一些实用的软件，可以对硬件进行稳定性测试；</summary>
        
      
    
    
    
    <category term="Windows日常" scheme="https://blog.zs13.tech/categories/Windows%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="软件" scheme="https://blog.zs13.tech/tags/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="配置" scheme="https://blog.zs13.tech/tags/%E9%85%8D%E7%BD%AE/"/>
    
    <category term="winget" scheme="https://blog.zs13.tech/tags/winget/"/>
    
    <category term="Windows" scheme="https://blog.zs13.tech/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>archlinux 踩坑日记</title>
    <link href="https://blog.zs13.tech/posts/50857/"/>
    <id>https://blog.zs13.tech/posts/50857/</id>
    <published>2024-01-07T04:40:00.000Z</published>
    <updated>2024-07-23T05:25:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><imgsrc="https://cdn.jsdelivr.net/gh/lingzs13/img-cloud//img/screen_shot_.png" /></p><h2 id="n卡硬件解码">N卡硬件解码</h2><h3 id="安装必要的插件">安装必要的插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S linux-headers #这个一定要装</span><br><span class="line">sudo pacman -S nvidia-dkms nvidia-settings nvidia-utils #nvidia相关驱动</span><br><span class="line">sudo pacman -S libva-utils #提供硬件解码的包 </span><br><span class="line">yay -S libva-nvidia-driver-git #重要！！！在我的电脑上libva-nvidia-driver这个包无法使用硬件加速git版才可以 浪费了我很多的时间！！！！</span><br></pre></td></tr></table></figure><h3 id="可选添加n卡驱动早启动">(可选)添加n卡驱动早启动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/mkinitcpio.conf</span><br><span class="line">在第一各MODULES=()添加nvidia、nvidia_modeset、nvidia_uvm 和nvidia_drm这几个参数</span><br><span class="line">-------------------------------------------------------------</span><br><span class="line">MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)</span><br><span class="line">-------------------------------------------------------------</span><br><span class="line">同时去掉下方HOOKS=()中的 kms 这个参数</span><br></pre></td></tr></table></figure><h3 id="修改gurb保证能够启动">修改gurb保证能够启动</h3><p>修改<code>/etc/default/grub</code>中的<code>GRUB_CMDLINE_LINUX_DEFAULT</code>选项添加<code>vidia_drm.modeset=1</code> 这一参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">以下是我的grub中前几行的参数</span><br><span class="line">—————————————————————————————————————————————————————————————</span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_TIMEOUT=5</span><br><span class="line">GRUB_DISTRIBUTOR=&quot;Arch&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;loglevel=5 nowatchdog  nvidia_drm.modeset=1 &quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;&quot;</span><br><span class="line">—————————————————————————————————————————————————————————————</span><br><span class="line">添加完成后使用</span><br><span class="line">sudo grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line">来更新grub</span><br><span class="line">要记得重启哦！</span><br></pre></td></tr></table></figure><h3 id="检查va-api">检查va-api</h3><p>运行 <ahref="https://archlinux.org/packages/?name=libva-utils">libva-utils</a>包包提供的 <code>vainfo</code> 来检查 VA-API 的设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">以下是我的运行结果，没出来就代表未启动硬件加速</span><br><span class="line">-------------------------------------------------------------</span><br><span class="line">Trying display: wayland</span><br><span class="line">vainfo: VA-API version: 1.20 (libva 2.20.1)</span><br><span class="line">vainfo: Driver version: VA-API NVDEC driver [direct backend]</span><br><span class="line">vainfo: Supported profile and entrypoints</span><br><span class="line">      VAProfileMPEG2Simple            :VAEntrypointVLD</span><br><span class="line">      VAProfileMPEG2Main              :VAEntrypointVLD</span><br><span class="line">      VAProfileVC1Simple              :VAEntrypointVLD</span><br><span class="line">      VAProfileVC1Main                :VAEntrypointVLD</span><br><span class="line">      VAProfileVC1Advanced            :VAEntrypointVLD</span><br><span class="line">      VAProfileH264Main               :VAEntrypointVLD</span><br><span class="line">      VAProfileH264High               :VAEntrypointVLD</span><br><span class="line">      VAProfileH264ConstrainedBaseline:VAEntrypointVLD</span><br><span class="line">      VAProfileHEVCMain               :VAEntrypointVLD</span><br><span class="line">      VAProfileVP8Version0_3          :VAEntrypointVLD</span><br><span class="line">      VAProfileVP9Profile0            :VAEntrypointVLD</span><br><span class="line">      VAProfileAV1Profile0            :VAEntrypointVLD</span><br><span class="line">      VAProfileHEVCMain10             :VAEntrypointVLD</span><br><span class="line">      VAProfileHEVCMain12             :VAEntrypointVLD</span><br><span class="line">      VAProfileVP9Profile2            :VAEntrypointVLD</span><br><span class="line">      VAProfileHEVCMain444            :VAEntrypointVLD</span><br><span class="line">      VAProfileHEVCMain444_10         :VAEntrypointVLD</span><br><span class="line">      VAProfileHEVCMain444_12         :VAEntrypointVLD</span><br></pre></td></tr></table></figure><h3 id="修改firefox配置启用硬件加速">修改firefox配置启用硬件加速</h3><p>这一段请参考<ahref="https://github.com/elFarto/nvidia-vaapi-driver/#firefox">官方文档</a></p>]]></content>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;&lt;img
src=&quot;https://cdn.jsdelivr.net/gh/lingzs13/img-cloud//img/screen_shot_.png&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;n卡硬件解码&quot;&gt;N卡硬件解码&lt;/h2&gt;
&lt;h3</summary>
        
      
    
    
    
    <category term="踩坑日记" scheme="https://blog.zs13.tech/categories/%E8%B8%A9%E5%9D%91%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="硬件解码" scheme="https://blog.zs13.tech/tags/%E7%A1%AC%E4%BB%B6%E8%A7%A3%E7%A0%81/"/>
    
    <category term="linux" scheme="https://blog.zs13.tech/tags/linux/"/>
    
    <category term="nvidia" scheme="https://blog.zs13.tech/tags/nvidia/"/>
    
    <category term="archlinux" scheme="https://blog.zs13.tech/tags/archlinux/"/>
    
  </entry>
  
</feed>
